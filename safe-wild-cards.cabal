cabal-version: >=1.10

name: safe-wild-cards
version: 1.0.0
synopsis: Use RecordWildCards safely
description:
  @RecordWildCards@ are convenient, but sometimes you want to assert that
  you have handled all fields of a record.
  .
  Let's say you are writing a @ToJSON@ instance for a record:
  .
  @
  instance ToJSON Rec where
    toJSON Rec{..} = ...
  @
  .
  To get compilation warnings whenever you update @Rec@ and forget to handle
  the new field in @toJSON@, change the instance to look like this:
  .
  @
  {-# LANGUAGE TemplateHaskell #-}

  import SafeWildCards

  instance ToJSON Rec where
    toJSON $(fields 'Rec) = ...
  @
  .
  If you want to ignore a field, do it explicitly:
  .
  @
  instance ToJSON Rec where
    toJSON $(fields 'Rec) = ...
      where
        _ = recUnusedField  -- not used because XYZ
  @
  .
  If you want expose fields from several records, you can prefix them to
  avoid clashes:
  .
  @
  diff :: Rec -> Rec -> Text
  diff $(fieldsPrefixed "a_" 'Rec) $(fieldsPrefixed "b_" 'Rec) = ...
  @

license: BSD3
license-file: LICENSE
author: Artyom Kazak
maintainer: Monadfix <hi@monadfix.com>
homepage: https://github.com/monadfix/safe-wild-cards
category: Control
build-type: Simple
extra-source-files:
  CHANGELOG.md
  README.md
tested-with:
  GHC ==8.0.2
  GHC ==8.2.2
  GHC ==8.4.4
  GHC ==8.6.5
  GHC ==8.8.1

source-repository head
  type: git
  location: git@github.com:monadfix/safe-wild-cards.git

library
  exposed-modules:
    SafeWildCards
  build-depends:
    base ==4.*,
    template-haskell ==2.*,
    th-abstraction ==0.3.*
  hs-source-dirs:
    src
  default-language:
    Haskell2010
  ghc-options:
    -Wall

test-suite test
  type: exitcode-stdio-1.0
  main-is:
    Test.hs
  other-modules:
    TestTypes
  build-depends:
    base,
    safe-wild-cards
  hs-source-dirs:
    test
  default-language:
    Haskell2010
  ghc-options:
    -Wall
